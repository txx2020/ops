# 先在hosts内添加ip
tee -a /etc/hosts << 'EOF'
10.253.129.43 t43
10.253.129.44 t44
10.253.129.45 t45
10.253.129.46 t46
10.253.129.47 t47
10.253.129.42 k8s.control-server.com  # vip地址
EOF

# 添加Ansible的hosts
tee -a /etc/ansible/hosts << 'EOF'
[master]
t[46:47]

[work]
t[43:45]

[k8s:children]
master
work

[k8s:vars]
ansible_user=tongtu
ansible_port=22
ansible_ssh_pass=ttyj7890
ansible_become_password=ttyj7890
EOF

# 生成ssh-key，记录为,添加备注：yunwei@tongtu
ssh-keygen -t ed25519 -C "yunwei@tongtu"

# 分发密钥,会提示输入密码
for i in $(seq 43 47);do ssh-copy-id -o StrictHostKeyChecking=no -p 22 tongtu@t${i};done

# 验证ansible
ansible k8s -m ping -o
ansible work -m ping -o

# 批量添加hosts
ansible k8s -m lineinfile -a 'path=/etc/hosts line="10.253.129.43 t43" create=yes' -o --become
ansible k8s -m lineinfile -a 'path=/etc/hosts line="10.253.129.44 t44" create=yes' -o --become
ansible k8s -m lineinfile -a 'path=/etc/hosts line="10.253.129.45 t45" create=yes' -o --become
ansible k8s -m lineinfile -a 'path=/etc/hosts line="10.253.129.46 t46" create=yes' -o --become
ansible k8s -m lineinfile -a 'path=/etc/hosts line="10.253.129.47 t47" create=yes' -o --become
ansible k8s -m lineinfile -a 'path=/etc/hosts line="10.253.129.42 k8s.control-server.com" create=yes' -o --become

# 自动同步时间以及主机时区设置
#ansible k8s -m shell -a "ntpdate ntp1.aliyun.com" -o
#ansible k8s -m shell -a "timedatectl set-timezone Asia/Shanghai && timedatectl set-local-rtc 0" -o 

# 此处KylinOS安全加固模板是采用的chronyd同步而非ntpdate，而需将ntp.aliyun.com更改为ntp1.aliyun.com
#ansible k8s -m replace -a 'path=/etc/chrony.conf regexp="ntp.aliyun.com" replace="ntp1.aliyun.com"' -o

# 禁用swap
 # 临时生效
#ansible k8s -m shell -a "sysctl -w vm.swappiness=0"
ansible k8s -m shell -a 'swapoff -a' --become
 # 永久生效
#ansible k8s -m lineinfile -a 'path=/etc/sysctl.conf line="# 部署 Kubernetes 集群相关内核参数配置"' -o
#    ansible k8s -m lineinfile -a 'path=/etc/sysctl.conf line="vm.swappiness = 0"' -o

# 安装ipvsadm
ansible k8s -m shell -a 'yum install ipvsadm -y ' --become

# 启用
ansible k8s -m lineinfile -a 'path=/etc/sysctl.conf line="net.ipv4.ip_forward=1" state=present create=yes' -o --become # state=present不添加默认有
# ansible k8s -m lineinfile -a 'path=/etc/sysctl.conf line="net.ipv4.ip_forward=1" state=absent' -o --become # 删除
ansible k8s -m shell -a 'sysctl -p ' --become

ansible k8s -m shell -a 'yum install bridge-utils -y' --become
ansible k8s -m shell -a 'modprobe br_netfilter' --become

ansible k8s -m lineinfile -a 'path=/etc/modules-load.d/k8s.conf line="br_netfilter" state=present create=yes' -o --become

ansible k8s -m lineinfile -a 'path=/etc/sysctl.conf line="net.bridge.bridge-nf-call-ip6tables=1" state=present create=yes' -o --become
ansible k8s -m lineinfile -a 'path=/etc/sysctl.conf line="net.bridge.bridge-nf-call-iptables=1" state=present create=yes' -o --become

ansible k8s -m shell -a 'sysctl -p ' --become

# 执行前需要$HOME下新建.ansible.cfg文件
#[defaults]
#host_key_checking = False
sudo ansible k8s -m copy -a "src=/etc/docker/daemon.json dest=/etc/docker/daemon.json force=yes" -o --become

ansible k8s -m shell -a 'systemctl daemon-reload && systemctl restart docker && systemctl enable docker' --become

sudo ansible k8s -m copy -a "src=/usr/bin/cri-dockerd dest=/usr/bin/cri-dockerd force=yes" -o --become
ansible k8s -m shell -a 'chmod +x /usr/bin/cri-dockerd' --become

sudo ansible k8s -m copy -a "src=/usr/lib/systemd/system/cri-docker.service dest=/usr/lib/systemd/system/cri-docker.service force=yes" -o --become
sudo ansible k8s -m copy -a "src=/usr/lib/systemd/system/cri-docker.socket dest=/usr/lib/systemd/system/cri-docker.socket force=yes" -o --become

ansible k8s -m shell -a 'systemctl daemon-reload && systemctl enable cri-docker && systemctl start cri-docker && systemctl is-active cri-docker' --become

sudo ansible k8s -m copy -a "src=/etc/yum.repos.d/kubernetes.repo dest=/etc/yum.repos.d/kubernetes.repo force=yes" -o --become

ansible k8s -m shell -a "setenforce 0" --become

ansible k8s -m shell -a "yum install -y kubelet kubeadm kubectl" --become

ansible k8s -m shell -a "systemctl enable kubelet && systemctl start kubelet" --become

ansible k8s -m shell -a "kubeadm join 10.253.129.47:6443 --token v0a9tg.b2fshv8m1063q47a   --discovery-token-ca-cert-hash sha256:7c638094a4f55be14cc4d61090e784b437996fb4b61909cb8e91c8d262e9b20e --cri-socket unix:///var/run/cri-dockerd.sock" --become

ansible k8s -m shell -a "mkdir -p /home/tongtu/.kube"
ansible k8s -m shell -a "cp -i /etc/kubernetes/admin.conf $HOME/.kube/config" --become
ansible k8s -m shell -a "chown tongtu:tongtu $HOME/.kube/config" --become
          
ansible k8s -m shell -a 'docker rm $(docker ps -a -f status=exited -q)'