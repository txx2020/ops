 cat hdfs-site.xml  | grep -vE '^#|^$'|grep -E '<|-'

# openvpn 初始化命令
docker-compose run --rm openvpn ovpn_genconfig -u udp://公网IP

# 生成配置文件
docker-compose run --rm openvpn ovpn_initpki
# 会输入密码

 # 添加openvpn 用户
 docker-compose run --rm openvpn easyrsa build-client-full  weizhen
# 中间会输入私钥和公钥
 docker-compose run --rm openvpn ovpn_getclient  weizhen  > ./weizhen.ovpn


# docker-compose run --rm openvpn easyrsa build-client-full tianxiaoxiao   nopass # 无密码版
 # 更改端口，因为在容器内，所以不太一样
 sed -i 's/1194/49755/g' *ovpn


公钥：1uijsdkjijnkj*&*hh%^g

# 撤销用户使用
docker-compose run --rm openvpn easyrsa revoke weizhen
sed -i '/<\/tls-auth>/a sndbuf 0\nrcvbuf 0'  /usr/local/bin/ovpn_getclient
sndbuf 0  #新增优化项
rcvbuf 0   #新增优化项

# 所有流量全部走openvpn
客户端添加：redirect-gateway autolocal

#hadoop下载文件
./hdfs dfs -get  /hanyi/检测/1标段下部利旧图片   file:///home/tongtu/bak/hadoop/export
#hadoop 上传文件
./hdfs dfs -put file:///home/tongtu/server/export/1标段下部利旧图片   /hanyi/检测/

#hadoop删除文件
./hdfs dfs -rm -r

#hbase导出表数据
./hbase org.apache.hadoop.hbase.mapreduce.Export emp file:///home/tongtu/bak

#hbase导入表数据
./hbase org.apache.hadoop.hbase.mapreduce.Driver import emp file:///home/tongtu/bak

# hadoop 删除楚天的图片数据
./hadoop fs -ls /EdgeDevice/img | grep '^d' | awk '{print $8}' | grep -E '/EdgeDevice/img/2023-(0[1-9]|10|11|12)-(0[1-9]|[12][0-9]|3[01])' | grep -E '/EdgeDevice/img/2023-(0[1-9]|10|11)-(0[1-9]|[12][0-9]|3[01])|2023-12-0[1-3]' | while read folder; do hadoop fs -rm -r "$folder"; done
# 210 服务器把自身的8080端口转发到10.253.129.13的45666端口
ssh -N -f -R 45666:127.0.0.1:8080 10.253.129.13


# fedora 关闭swap
 systemctl mask swap.target
 systemctl daemon-reload
 fw2XoRhOgyJncMjj

# 把本机文件拷贝到远端
 rsync $RSYNC_OPTIONS "$SRC_DIR" "$DEST_USER@$DEST_HOST:$DEST_DIR"
# 把远端文件拷贝到本机
 rsync $RSYNC_OPTIONS "$SRC_USER@$SRC_HOST:$SRC_DIR" "$DEST_DIR"

# docker 寻找空白的镜像
docker images |grep none  |awk '{print $3}'  |  tr '\n' ' '

ubuntu扩容
lvextend -l +100%FREE /dev/ubuntu-vg/ubuntu-lv
resize2fs /dev/ubuntu-vg/ubuntu-lv

# 镜像更新的命令
docker compose pull && docker compose up -d

# docker 把两个架构镜像打包成一个标签
docker manifest create control-server.com/java/openjdk:8u342-slim-buster --amend control-server.com/java/openjdk:x86 --amend control-server.com/java/openjdk:arm

# 上传镜像
docker manifest push  control-server.com/java/openjdk:8u342-slim-buster